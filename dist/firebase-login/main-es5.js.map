{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/models/user.model.ts","webpack:///src/app/pages/login/login.component.ts","webpack:///src/app/pages/login/login.component.html","webpack:///src/app/pages/users-edit/add-user-popup/add-user-popup.component.ts","webpack:///src/app/pages/users-edit/add-user-popup/add-user-popup.component.html","webpack:///src/app/pages/users-edit/users-edit.component.ts","webpack:///src/app/pages/users-edit/users-edit.component.html","webpack:///src/app/services/authService/auth.service.ts","webpack:///src/app/services/userService/user.service.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","component","AppRoutingModule","forRoot","useHash","imports","AppComponent","title","selector","templateUrl","styleUrls","firebaseConfig","AppModule","initializeApp","declarations","providers","bootstrap","User","user","Object","assign","LoginComponent","authService","router","form","email","value","password","console","log","onLogin","subscribe","res","invalidAuthMessage","message","onSubmit","AddUserPopupComponent","className","document","querySelector","classList","toggle","UsersEditComponent","userService","reloadTable","fetchUsers","users","userPopup","firstname","lastname","adress","phone","addUser","reset","userID","deleteUser","onLogout","onAdd","onClear","AuthService","result","observer","signInWithEmailAndPassword","navigate","next","error","signOut","providedIn","UserService","usersIds","usersData","ref","on","snap","snapVal","val","usersArr","map","i","length","push","pipe","postData","database","userId","Math","max","set","remove","environment","production","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","bootstrapModule","err"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { LoginComponent } from './pages/login/login.component';\r\nimport { UsersEditComponent } from './pages/users-edit/users-edit.component';\r\n\r\nconst routes: Routes = [\r\n  { path: '', component: LoginComponent },\r\n  { path: 'login', component: LoginComponent },\r\n  { path: 'edit', component: UsersEditComponent },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes, { useHash: true })],\r\n  exports: [RouterModule],\r\n})\r\nexport class AppRoutingModule {}\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss']\r\n})\r\nexport class AppComponent {\r\n  title = 'firebase-login';\r\n}\r\n","<router-outlet></router-outlet>\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { LoginComponent } from './pages/login/login.component';\r\nimport { UsersEditComponent } from './pages/users-edit/users-edit.component';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { AddUserPopupComponent } from './pages/users-edit/add-user-popup/add-user-popup.component';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { AngularFireModule } from '@angular/fire';\r\nimport { AngularFireAuthModule } from '@angular/fire/auth';\r\nimport { environment } from 'src/environments/environment';\r\n\r\nimport * as firebase from 'firebase';\r\n\r\nfirebase.initializeApp(environment.firebaseConfig);\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    LoginComponent,\r\n    UsersEditComponent,\r\n    AddUserPopupComponent,\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    FormsModule,\r\n    HttpClientModule,\r\n    AngularFireModule.initializeApp(environment.firebaseConfig),\r\n    AngularFireAuthModule,\r\n  ],\r\n  providers: [LoginComponent],\r\n  bootstrap: [AppComponent],\r\n})\r\nexport class AppModule {}\r\n","export class User {\r\n  firstname: string;\r\n  lastname: string;\r\n  adress: string;\r\n  phone: string;\r\n  id: number;\r\n\r\n  constructor(user: any) {\r\n    if (user) Object.assign(this, user);\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { NgForm } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { AuthService } from '../../services/authService/auth.service';\r\nimport { User } from 'src/app/models/user.model';\r\n\r\n@Component({\r\n  selector: 'login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.scss'],\r\n})\r\nexport class LoginComponent implements OnInit {\r\n  user: User[];\r\n  invalidAuthMessage: string | null;\r\n\r\n  constructor(private authService: AuthService, private router: Router) {}\r\n\r\n  ngOnInit(): void {}\r\n  onSubmit(form: NgForm) {\r\n    const email = form.value.email;\r\n    const password = form.value.password;\r\n\r\n    console.log(`Login with email: ${email} and password: ${password}`);\r\n\r\n    this.authService.onLogin(email, password).subscribe((res: any) => {\r\n      if (res) {\r\n        this.invalidAuthMessage = res.message;\r\n      }\r\n    });\r\n  }\r\n}\r\n","<div class=\"login-container\">\r\n  <div class=\"form-container\">\r\n    <h3 class=\"form-header\">Login</h3>\r\n    <form class=\"form\" #loginForm=\"ngForm\" (ngSubmit)=\"onSubmit(loginForm)\">\r\n      <div class=\"form-element\">\r\n        <input\r\n          type=\"email\"\r\n          id=\"email\"\r\n          name=\"email\"\r\n          ngModel\r\n          class=\"email-input\"\r\n        />\r\n        <label for=\"email\" class=\"email-label\">E-mail (test@test.pl)</label>\r\n      </div>\r\n\r\n      <div class=\"form-element\">\r\n        <input\r\n          type=\"password\"\r\n          id=\"password\"\r\n          name=\"password\"\r\n          ngModel\r\n          class=\"password-input\"\r\n        />\r\n        <label for=\"password\" class=\"password-label\">Password (test123)</label>\r\n      </div>\r\n\r\n      <p\r\n        class=\"wrong-auth-text\"\r\n        [ngStyle]=\"{ visibility: invalidAuthMessage ? 'visible' : 'hidden' }\"\r\n      >\r\n        {{ invalidAuthMessage }}\r\n      </p>\r\n\r\n      <button type=\"submit\" class=\"login-button\">Login</button>\r\n    </form>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'add-user-popup',\r\n  templateUrl: './add-user-popup.component.html',\r\n  styleUrls: ['./add-user-popup.component.scss']\r\n})\r\nexport class AddUserPopupComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  toggle(className) {\r\n    document.querySelector(className).classList.toggle('hide');\r\n  }\r\n}\r\n","<div class=\"popupBg hide\" (click)=\"toggle('.popupBg')\">\r\n      <ng-content></ng-content>\r\n</div>\r\n","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { UserService } from '../../services/userService/user.service';\r\nimport { User } from '../../models/user.model';\r\nimport { NgForm } from '@angular/forms';\r\nimport { AddUserPopupComponent } from './add-user-popup/add-user-popup.component';\r\nimport { AuthService } from 'src/app/services/authService/auth.service';\r\n\r\n@Component({\r\n  selector: 'app-users-edit',\r\n  templateUrl: './users-edit.component.html',\r\n  styleUrls: ['./users-edit.component.scss'],\r\n})\r\nexport class UsersEditComponent implements OnInit {\r\n  users: User[];\r\n\r\n  @ViewChild(AddUserPopupComponent) userPopup: AddUserPopupComponent;\r\n\r\n  constructor(\r\n    private userService: UserService,\r\n    private authService: AuthService\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.reloadTable();\r\n  }\r\n\r\n  reloadTable() {\r\n    this.userService.fetchUsers().subscribe((users) => {\r\n      this.users = users;\r\n    });\r\n  }\r\n\r\n  toggle(className) {\r\n    this.userPopup.toggle(className);\r\n  }\r\n\r\n  onAdd(form: NgForm) {\r\n    const user = new User({\r\n      firstname: form.value.firstname,\r\n      lastname: form.value.lastname,\r\n      adress: form.value.adress,\r\n      phone: form.value.phone,\r\n      id: '0',\r\n    });\r\n    this.userService.addUser(user).subscribe((users) => {\r\n      this.reloadTable();\r\n    });\r\n    form.reset();\r\n  }\r\n\r\n  onDelete(userID: number) {\r\n    this.userService.deleteUser(userID).subscribe((users) => {\r\n      this.reloadTable();\r\n    });\r\n  }\r\n\r\n  onClear(form: NgForm) {\r\n    form.reset();\r\n  }\r\n\r\n  onLogout() {\r\n    this.authService.onLogout();\r\n  }\r\n}\r\n","<button type=\"button\" class=\"logout-button\" (click)=\"onLogout()\">Logout</button>\r\n<div class=\"table-container\">\r\n  <div>\r\n    <button (click)=\"toggle('.popupBg')\" class=\"add_user-button\">\r\n      Add user\r\n    </button>\r\n    <div class=\"table\">\r\n      <div class=\"tableBody\">\r\n        <div class=\"tableHead\">Users</div>\r\n        <div class=\"tableRow tableRow--odd\">\r\n          <div class=\"tableCell--head\">Name</div>\r\n          <div class=\"tableCell--head\">Surname</div>\r\n          <div class=\"tableCell--head\">Address</div>\r\n          <div class=\"tableCell--head\">Phone</div>\r\n          <div class=\"tableCell--head\"></div>\r\n        </div>\r\n        <div\r\n          [ngClass]=\"\r\n            this.i % 2 == 0\r\n              ? 'tableRow tableRow--even'\r\n              : 'tableRow tableRow--odd'\r\n          \"\r\n          *ngFor=\"let user of users; let i = index\"\r\n        >\r\n          <div class=\"tableCell\">\r\n            <p class=\"tableCell__text\">{{ users[i].firstname }}</p>\r\n          </div>\r\n          <div class=\"tableCell\">\r\n            <p class=\"tableCell__text\">{{ users[i].lastname }}</p>\r\n          </div>\r\n          <div class=\"tableCell\">\r\n            <p class=\"tableCell__text\">{{ users[i].adress }}</p>\r\n          </div>\r\n          <div class=\"tableCell\">\r\n            <p class=\"tableCell__text\">{{ users[i].phone }}</p>\r\n          </div>\r\n          <div class=\"tableCell\">\r\n            <button (click)=\"onDelete(users[i].id)\" class=\"delete-button\">\r\n              X\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <add-user-popup>\r\n      <div class=\"add_user-container\" onclick=\"event.stopPropagation()\">\r\n        <form #userEditForm=\"ngForm\" (ngSubmit)=\"onAdd(userEditForm)\">\r\n          <label for=\"firstname\" class=\"add_user-label\">Name</label><br />\r\n          <input\r\n            type=\"text\"\r\n            name=\"firstname\"\r\n            id=\"firstname\"\r\n            ngModel\r\n            class=\"add_user-input\"\r\n          /><br />\r\n          <label for=\"lastname\" class=\"add_user-label\">Surname</label><br />\r\n          <input\r\n            type=\"text\"\r\n            name=\"lastname\"\r\n            id=\"lastname\"\r\n            ngModel\r\n            class=\"add_user-input\"\r\n          /><br />\r\n          <label for=\"adress\" class=\"add_user-label\">Address</label><br />\r\n          <input\r\n            type=\"text\"\r\n            name=\"adress\"\r\n            id=\"adress\"\r\n            ngModel\r\n            class=\"add_user-input\"\r\n          /><br />\r\n          <label for=\"phone\" class=\"add_user-label\">Phone</label><br />\r\n          <input\r\n            type=\"text\"\r\n            name=\"phone\"\r\n            id=\"phone\"\r\n            ngModel\r\n            class=\"add_user-input\"\r\n          /><br />\r\n          <button\r\n            type=\"submit\"\r\n            class=\"add_user-button--add\"\r\n            (click)=\"toggle('.popupBg')\"\r\n          >\r\n            Dodaj\r\n          </button>\r\n          <button\r\n            type=\"button\"\r\n            class=\"add_user-button--clear\"\r\n            (click)=\"onClear(userEditForm)\"\r\n          >\r\n            Wyczyść\r\n          </button>\r\n          <button\r\n            type=\"button\"\r\n            class=\"add_user-button--close\"\r\n            (click)=\"toggle('.popupBg')\"\r\n          >\r\n            Anuluj\r\n          </button>\r\n        </form>\r\n      </div>\r\n    </add-user-popup>\r\n  </div>\r\n</div>\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { AngularFireAuth } from '@angular/fire/auth';\r\nimport { Router } from '@angular/router';\r\n\r\nimport '@firebase/auth';\r\nimport * as firebase from 'firebase/app';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class AuthService {\r\n  constructor(private router: Router) {}\r\n\r\n  onLogin(email: string, password: string) {\r\n    const result = new Observable((observer) => {\r\n      firebase\r\n        .auth()\r\n        .signInWithEmailAndPassword(email, password)\r\n        .then(() => {\r\n          this.router.navigate(['edit']);\r\n          observer.next(null);\r\n        })\r\n        .catch((error) => {\r\n          observer.next(error);\r\n        });\r\n    });\r\n\r\n    return result;\r\n  }\r\n\r\n  async onLogout() {\r\n    try {\r\n      await firebase.auth().signOut();\r\n      this.router.navigate(['./']);\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Subject, of } from 'rxjs';\r\nimport { take } from 'rxjs/operators';\r\nimport { User } from 'src/app/models/user.model';\r\n\r\nimport * as firebase from 'firebase/app';\r\nimport 'firebase/database';\r\nimport 'firebase/auth';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class UserService {\r\n  constructor() {}\r\n\r\n  usersIds = [];\r\n\r\n  fetchUsers() {\r\n    let result = new Subject<User[]>();\r\n\r\n    const usersData = firebase.database().ref('users');\r\n\r\n    usersData.on('value', (snap) => {\r\n      let snapVal = snap.val();\r\n\r\n      if (snapVal === null) {\r\n        snapVal = [];\r\n      }\r\n\r\n      let usersArr = Object.keys(snapVal).map((id) => new User(snapVal[id]));\r\n\r\n      for (let i = 0; i < usersArr.length; i++) {\r\n        this.usersIds.push(usersArr[i].id);\r\n      }\r\n\r\n      result.next(usersArr);\r\n    });\r\n\r\n    return result.pipe(take(2));\r\n  }\r\n\r\n  addUser(user: User) {\r\n    const postData: User = user;\r\n\r\n    const database = firebase.database();\r\n\r\n    let userId: number;\r\n\r\n    if (this.usersIds.length === 0) {\r\n      userId = 0;\r\n    } else {\r\n      userId = Math.max(...this.usersIds) + 1;\r\n    }\r\n\r\n    database.ref('users/' + userId).set({\r\n      firstname: postData.firstname,\r\n      lastname: postData.lastname,\r\n      adress: postData.adress,\r\n      phone: postData.phone,\r\n      id: userId,\r\n    });\r\n\r\n    return of(postData);\r\n  }\r\n\r\n  deleteUser(userId: number) {\r\n    const usersData = firebase.database().ref(`users/${userId}`);\r\n\r\n    usersData.remove();\r\n\r\n    return of(usersData);\r\n  }\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false,\r\n  firebaseConfig: {\r\n    apiKey: 'AIzaSyA7pMaqfDaMKogW45qOCNFWxl_OsU0tByY',\r\n    authDomain: 'fir-login-1416c.firebaseapp.com',\r\n    databaseURL: 'https://fir-login-1416c.firebaseio.com',\r\n    projectId: 'fir-login-1416c',\r\n    storageBucket: 'fir-login-1416c.appspot.com',\r\n    messagingSenderId: '29457885746',\r\n    appId: '1:29457885746:web:c3e7c3bd2cee9aad74ea2b',\r\n  },\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"]}