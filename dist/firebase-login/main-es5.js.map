{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/models/user.model.ts","webpack:///src/app/pages/login/login.component.ts","webpack:///src/app/pages/login/login.component.html","webpack:///src/app/pages/users-edit/add-user-popup/add-user-popup.component.ts","webpack:///src/app/pages/users-edit/add-user-popup/add-user-popup.component.html","webpack:///src/app/pages/users-edit/users-edit.component.ts","webpack:///src/app/pages/users-edit/users-edit.component.html","webpack:///src/app/services/authService/auth.service.ts","webpack:///src/app/services/authService/authGuard/auth-guard.service.ts","webpack:///src/app/services/userService/user.service.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","component","AppRoutingModule","forRoot","useHash","imports","AppComponent","title","selector","templateUrl","styleUrls","firebaseConfig","AppModule","initializeApp","declarations","providers","bootstrap","User","user","Object","assign","LoginComponent","authService","router","form","email","value","password","console","log","onLogin","onSubmit","AddUserPopupComponent","className","document","querySelector","classList","toggle","UsersEditComponent","userService","reloadTable","fetchUsers","subscribe","users","userPopup","firstname","lastname","adress","phone","addUser","reset","userID","deleteUser","onLogout","onAdd","onClear","AuthService","http","fireAuth","signInWithEmailAndPassword","navigate","error","signOut","providedIn","AuthGuardService","loginComponent","isWrongData","UserService","usersIds","result","usersData","ref","on","snap","snapVal","val","usersArr","map","i","length","push","next","pipe","postData","database","userId","Math","max","set","remove","environment","production","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","bootstrapModule","err"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { LoginComponent } from './pages/login/login.component';\r\nimport { UsersEditComponent } from './pages/users-edit/users-edit.component';\r\nimport { AuthGuardService } from './services/authService/authGuard/auth-guard.service';\r\n\r\nconst routes: Routes = [\r\n  { path: '', component: LoginComponent },\r\n  { path: 'login', component: LoginComponent },\r\n  {\r\n    path: 'edit',\r\n    component: UsersEditComponent,\r\n    //canActivate: [AuthGuardService],\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes, { useHash: true })],\r\n  exports: [RouterModule],\r\n})\r\nexport class AppRoutingModule {}\r\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'firebase-login';\n}\n","<router-outlet></router-outlet>\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { LoginComponent } from './pages/login/login.component';\r\nimport { UsersEditComponent } from './pages/users-edit/users-edit.component';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { AddUserPopupComponent } from './pages/users-edit/add-user-popup/add-user-popup.component';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { AngularFireModule } from '@angular/fire';\r\nimport { AngularFireAuthModule } from '@angular/fire/auth';\r\nimport { AuthGuardService } from './services/authService/authGuard/auth-guard.service';\r\nimport { environment } from 'src/environments/environment';\r\n\r\nimport * as firebase from 'firebase';\r\n\r\nfirebase.initializeApp(environment.firebaseConfig);\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    LoginComponent,\r\n    UsersEditComponent,\r\n    AddUserPopupComponent,\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    FormsModule,\r\n    HttpClientModule,\r\n    AngularFireModule.initializeApp(environment.firebaseConfig),\r\n    AngularFireAuthModule,\r\n  ],\r\n  providers: [AuthGuardService, LoginComponent],\r\n  bootstrap: [AppComponent],\r\n})\r\nexport class AppModule {}\r\n","export class User {\r\n  firstname: string;\r\n  lastname: string;\r\n  adress: string;\r\n  phone: string;\r\n  id: number;\r\n\r\n  constructor(user: any) {\r\n    if (user) Object.assign(this, user);\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { NgForm } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { AuthService } from '../../services/authService/auth.service';\r\nimport { User } from 'src/app/models/user.model';\r\nimport { Observable } from 'rxjs';\r\nimport { UserLogin } from 'src/app/models/user-login.model';\r\nimport { AuthGuardService } from 'src/app/services/authService/authGuard/auth-guard.service';\r\n\r\n@Component({\r\n  selector: 'login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.scss'],\r\n})\r\nexport class LoginComponent implements OnInit {\r\n  user: User[];\r\n  isWrongData: boolean;\r\n\r\n  constructor(private authService: AuthService, private router: Router) {}\r\n\r\n  ngOnInit(): void {}\r\n  onSubmit(form: NgForm) {\r\n    const email = form.value.email;\r\n    const password = form.value.password;\r\n\r\n    console.log(`Login with email: ${email} and password: ${password}`);\r\n\r\n    this.authService.onLogin(email, password);\r\n\r\n    // authObs.subscribe(\r\n    //   (resData) => {\r\n    //     this.isWrongData = false;\r\n    //     console.log(resData);\r\n    //     this.router.navigate(['edit']);\r\n    //     !!this.isWrongData;\r\n    //   },\r\n    //   (errorMessage) => {\r\n    //     this.isWrongData = true;\r\n    //     console.log(errorMessage);\r\n    //   }\r\n    // );\r\n  }\r\n}\r\n","<div class=\"login-container\">\r\n  <div class=\"form-container\">\r\n    <form #loginForm=\"ngForm\" (ngSubmit)=\"onSubmit(loginForm)\">\r\n      <p class=\"wrong-auth-text\" *ngIf=\"isWrongData === true\">\r\n        Podałeś zły login lub hasło\r\n      </p>\r\n      <input\r\n        type=\"email\"\r\n        id=\"email\"\r\n        name=\"email\"\r\n        ngModel\r\n        class=\"email-input\"\r\n      /><br />\r\n      <label for=\"email\" class=\"email-label\">E-mail</label><br />\r\n      <input\r\n        type=\"password\"\r\n        id=\"password\"\r\n        name=\"password\"\r\n        ngModel\r\n        class=\"password-input\"\r\n      />\r\n      <i class=\"fas fa-eye-slash\"></i><br />\r\n      <label for=\"password\" class=\"password-label\">Hasło</label><br />\r\n      <button type=\"submit\" class=\"login-button\">Zaloguj się</button>\r\n    </form>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'add-user-popup',\n  templateUrl: './add-user-popup.component.html',\n  styleUrls: ['./add-user-popup.component.scss']\n})\nexport class AddUserPopupComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n  toggle(className) {\n    document.querySelector(className).classList.toggle('hide');\n  }\n}\n","<div class=\"popupBg hide\" (click)=\"toggle('.popupBg')\">\n      <ng-content></ng-content>\n</div>\n","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { UserService } from '../../services/userService/user.service';\r\nimport { User } from '../../models/user.model';\r\nimport { NgForm } from '@angular/forms';\r\nimport { AddUserPopupComponent } from './add-user-popup/add-user-popup.component';\r\nimport { AuthService } from 'src/app/services/authService/auth.service';\r\n\r\n@Component({\r\n  selector: 'app-users-edit',\r\n  templateUrl: './users-edit.component.html',\r\n  styleUrls: ['./users-edit.component.scss'],\r\n})\r\nexport class UsersEditComponent implements OnInit {\r\n  users: User[];\r\n\r\n  @ViewChild(AddUserPopupComponent) userPopup: AddUserPopupComponent;\r\n\r\n  constructor(\r\n    private userService: UserService,\r\n    private authService: AuthService\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.reloadTable();\r\n  }\r\n\r\n  reloadTable() {\r\n    this.userService.fetchUsers().subscribe((users) => {\r\n      this.users = users;\r\n    });\r\n  }\r\n\r\n  toggle(className) {\r\n    this.userPopup.toggle(className);\r\n  }\r\n\r\n  onAdd(form: NgForm) {\r\n    const user = new User({\r\n      firstname: form.value.firstname,\r\n      lastname: form.value.lastname,\r\n      adress: form.value.adress,\r\n      phone: form.value.phone,\r\n      id: '0',\r\n    });\r\n    this.userService.addUser(user).subscribe((users) => {\r\n      this.reloadTable();\r\n    });\r\n    form.reset();\r\n  }\r\n\r\n  onDelete(userID: number) {\r\n    this.userService.deleteUser(userID).subscribe((users) => {\r\n      this.reloadTable();\r\n    });\r\n  }\r\n\r\n  onClear(form: NgForm) {\r\n    form.reset();\r\n  }\r\n\r\n  onLogout() {\r\n    this.authService.onLogout();\r\n  }\r\n}\r\n","<button type=\"button\" class=\"logout-button\" (click)=\"onLogout()\">\r\n  Wyloguj się\r\n</button>\r\n<div class=\"table-container\">\r\n  <div>\r\n    <button (click)=\"toggle('.popupBg')\" class=\"add_user-button\">\r\n      Dodaj użytkownika\r\n    </button>\r\n    <div class=\"table\">\r\n      <div class=\"tableBody\">\r\n        <div class=\"tableHead\">Użytkownicy</div>\r\n        <div class=\"tableRow--odd\">\r\n          <div class=\"tableCell--head\">Imię</div>\r\n          <div class=\"tableCell--head\">Nazwisko</div>\r\n          <div class=\"tableCell--head\">Adres</div>\r\n          <div class=\"tableCell--head\">Telefon</div>\r\n          <div class=\"tableCell--head\"></div>\r\n        </div>\r\n        <div\r\n          [ngClass]=\"this.i % 2 == 0 ? 'tableRow--even' : 'tableRow--odd'\"\r\n          *ngFor=\"let user of users; let i = index\"\r\n        >\r\n          <div class=\"tableCell\">{{ users[i].firstname }}</div>\r\n          <div class=\"tableCell\">{{ users[i].lastname }}</div>\r\n          <div class=\"tableCell\">{{ users[i].adress }}</div>\r\n          <div class=\"tableCell\">{{ users[i].phone }}</div>\r\n          <div class=\"tableCell\">\r\n            <button (click)=\"onDelete(users[i].id)\" class=\"delete-button\">\r\n              X\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <add-user-popup>\r\n      <div class=\"add_user-container\" onclick=\"event.stopPropagation()\">\r\n        <form #userEditForm=\"ngForm\" (ngSubmit)=\"onAdd(userEditForm)\">\r\n          <label for=\"firstname\" class=\"add_user-label\">Imię</label><br />\r\n          <input\r\n            type=\"text\"\r\n            name=\"firstname\"\r\n            id=\"firstname\"\r\n            ngModel\r\n            class=\"add_user-input\"\r\n          /><br />\r\n          <label for=\"lastname\" class=\"add_user-label\">Nazwisko</label><br />\r\n          <input\r\n            type=\"text\"\r\n            name=\"lastname\"\r\n            id=\"lastname\"\r\n            ngModel\r\n            class=\"add_user-input\"\r\n          /><br />\r\n          <label for=\"adress\" class=\"add_user-label\">Adres</label><br />\r\n          <input\r\n            type=\"text\"\r\n            name=\"adress\"\r\n            id=\"adress\"\r\n            ngModel\r\n            class=\"add_user-input\"\r\n          /><br />\r\n          <label for=\"phone\" class=\"add_user-label\">Numer telefonu</label><br />\r\n          <input\r\n            type=\"text\"\r\n            name=\"phone\"\r\n            id=\"phone\"\r\n            ngModel\r\n            class=\"add_user-input\"\r\n          /><br />\r\n          <button\r\n            type=\"submit\"\r\n            class=\"add_user-button--add\"\r\n            (click)=\"toggle('.popupBg')\"\r\n          >\r\n            Dodaj\r\n          </button>\r\n          <button\r\n            type=\"button\"\r\n            class=\"add_user-button--clear\"\r\n            (click)=\"onClear(userEditForm)\"\r\n          >\r\n            Wyczyść\r\n          </button>\r\n          <button\r\n            type=\"button\"\r\n            class=\"add_user-button--close\"\r\n            (click)=\"toggle('.popupBg')\"\r\n          >\r\n            Anuluj\r\n          </button>\r\n        </form>\r\n      </div>\r\n    </add-user-popup>\r\n  </div>\r\n</div>\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { AngularFireAuth } from '@angular/fire/auth';\r\nimport { Router } from '@angular/router';\r\n\r\nimport '@firebase/auth';\r\nimport * as firebase from 'firebase/app';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class AuthService {\r\n  constructor(\r\n    private http: HttpClient,\r\n    private router: Router,\r\n    private fireAuth: AngularFireAuth\r\n  ) {}\r\n\r\n  onLogin(email: string, password: string) {\r\n    firebase\r\n      .auth()\r\n      .signInWithEmailAndPassword(email, password)\r\n      .then(() => {\r\n        this.router.navigate(['edit']);\r\n        console.log('Succes');\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  }\r\n\r\n  async onLogout() {\r\n    try {\r\n      await firebase.auth().signOut();\r\n      this.router.navigate(['./']);\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { AuthService } from '../auth.service';\r\nimport { Router, CanActivate } from '@angular/router';\r\nimport { LoginComponent } from 'src/app/pages/login/login.component';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class AuthGuardService implements CanActivate {\r\n  constructor(private router: Router, private loginComponent: LoginComponent) {}\r\n\r\n  canActivate(): boolean {\r\n    console.log(this.loginComponent.isWrongData);\r\n    if (!this.loginComponent.isWrongData) {\r\n      console.log('true');\r\n      return true;\r\n    }\r\n    console.log('false');\r\n    return false;\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Subject, of } from 'rxjs';\r\nimport { take } from 'rxjs/operators';\r\nimport { User } from 'src/app/models/user.model';\r\n\r\nimport * as firebase from 'firebase/app';\r\nimport 'firebase/database';\r\nimport 'firebase/auth';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class UserService {\r\n  constructor() {}\r\n\r\n  usersIds = [];\r\n\r\n  fetchUsers() {\r\n    let result = new Subject<User[]>();\r\n\r\n    const usersData = firebase.database().ref('users');\r\n\r\n    usersData.on('value', (snap) => {\r\n      let snapVal = snap.val();\r\n\r\n      if (snapVal === null) {\r\n        snapVal = [];\r\n      }\r\n\r\n      let usersArr = Object.keys(snapVal).map((id) => new User(snapVal[id]));\r\n\r\n      for (let i = 0; i < usersArr.length; i++) {\r\n        this.usersIds.push(usersArr[i].id);\r\n      }\r\n\r\n      result.next(usersArr);\r\n    });\r\n\r\n    return result.pipe(take(2));\r\n  }\r\n\r\n  addUser(user: User) {\r\n    const postData: User = user;\r\n\r\n    const database = firebase.database();\r\n\r\n    let userId: number;\r\n\r\n    if (this.usersIds.length === 0) {\r\n      userId = 0;\r\n    } else {\r\n      userId = Math.max(...this.usersIds) + 1;\r\n    }\r\n\r\n    database.ref('users/' + userId).set({\r\n      firstname: postData.firstname,\r\n      lastname: postData.lastname,\r\n      adress: postData.adress,\r\n      phone: postData.phone,\r\n      id: userId,\r\n    });\r\n\r\n    return of(postData);\r\n  }\r\n\r\n  deleteUser(userId: number) {\r\n    const usersData = firebase.database().ref(`users/${userId}`);\r\n\r\n    usersData.remove();\r\n\r\n    return of(usersData);\r\n  }\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false,\r\n  firebaseConfig: {\r\n    apiKey: 'AIzaSyA7pMaqfDaMKogW45qOCNFWxl_OsU0tByY',\r\n    authDomain: 'fir-login-1416c.firebaseapp.com',\r\n    databaseURL: 'https://fir-login-1416c.firebaseio.com',\r\n    projectId: 'fir-login-1416c',\r\n    storageBucket: 'fir-login-1416c.appspot.com',\r\n    messagingSenderId: '29457885746',\r\n    appId: '1:29457885746:web:c3e7c3bd2cee9aad74ea2b',\r\n  },\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}