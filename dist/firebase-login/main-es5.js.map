{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/models/user.model.ts","webpack:///src/app/pages/login/login.component.ts","webpack:///src/app/pages/login/login.component.html","webpack:///src/app/pages/users-edit/add-user-popup/add-user-popup.component.ts","webpack:///src/app/pages/users-edit/add-user-popup/add-user-popup.component.html","webpack:///src/app/pages/users-edit/users-edit.component.ts","webpack:///src/app/pages/users-edit/users-edit.component.html","webpack:///src/app/services/authService/auth.service.ts","webpack:///src/app/services/authService/authGuard/auth-guard.service.ts","webpack:///src/app/services/userService/user.service.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","component","AppRoutingModule","forRoot","useHash","imports","AppComponent","title","selector","templateUrl","styleUrls","firebase","AppModule","declarations","providers","bootstrap","User","user","Object","assign","LoginComponent","authService","router","form","email","value","password","console","log","authObs","onLogin","subscribe","resData","isWrongData","navigate","errorMessage","onSubmit","AddUserPopupComponent","className","document","querySelector","classList","toggle","UsersEditComponent","userService","reloadTable","setTimeout","fetchUsers","users","userPopup","firstname","lastname","adress","phone","addUser","userID","deleteUser","reset","onLogout","onAdd","onClear","AuthService","http","post","apiKey","returnSecureToken","auth","signOut","providedIn","AuthGuardService","loginComponent","UserService","usersAr","get","usersArr","map","arrMap","i","length","push","postData","observe","responseData","body","name","error","environment","production","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","bootstrapModule","err"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { LoginComponent } from './pages/login/login.component';\r\nimport { UsersEditComponent } from './pages/users-edit/users-edit.component';\r\nimport { AuthGuardService } from './services/authService/authGuard/auth-guard.service';\r\n\r\nconst routes: Routes = [\r\n  { path: '', component: LoginComponent },\r\n  { path: 'login', component: LoginComponent },\r\n  {\r\n    path: 'edit',\r\n    component: UsersEditComponent,\r\n    //canActivate: [AuthGuardService],\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes, { useHash: true })],\r\n  exports: [RouterModule],\r\n})\r\nexport class AppRoutingModule {}\r\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'firebase-login';\n}\n","<router-outlet></router-outlet>\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { LoginComponent } from './pages/login/login.component';\r\nimport { UsersEditComponent } from './pages/users-edit/users-edit.component';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { AddUserPopupComponent } from './pages/users-edit/add-user-popup/add-user-popup.component';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { AngularFireModule } from '@angular/fire';\r\nimport { AngularFirestoreModule } from '@angular/fire/firestore';\r\nimport { AngularFireStorageModule } from '@angular/fire/storage';\r\nimport { AngularFireAuthModule } from '@angular/fire/auth';\r\nimport { environment } from 'src/environments/environment';\r\nimport { AuthGuardService } from './services/authService/authGuard/auth-guard.service';\r\n\r\nimport * as firebase from 'firebase';\r\n\r\nfirebase.initializeApp(environment.firebase);\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    LoginComponent,\r\n    UsersEditComponent,\r\n    AddUserPopupComponent,\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    FormsModule,\r\n    HttpClientModule,\r\n    AngularFireModule,\r\n    AngularFirestoreModule,\r\n    AngularFireStorageModule,\r\n    AngularFireAuthModule,\r\n  ],\r\n  providers: [AuthGuardService, LoginComponent],\r\n  bootstrap: [AppComponent],\r\n})\r\nexport class AppModule {}\r\n","export class User {\r\n  firstname: string;\r\n  lastname: string;\r\n  adress: string;\r\n  phone: string;\r\n  id: string;\r\n\r\n  constructor(user: any) {\r\n    if (user) Object.assign(this, user);\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { NgForm } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { AuthService } from '../../services/authService/auth.service';\r\nimport { User } from 'src/app/models/user.model';\r\nimport { Observable } from 'rxjs';\r\nimport { UserLogin } from 'src/app/models/user-login.model';\r\nimport { AuthGuardService } from 'src/app/services/authService/authGuard/auth-guard.service';\r\n\r\n@Component({\r\n  selector: 'login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.scss'],\r\n})\r\nexport class LoginComponent implements OnInit {\r\n  user: User[];\r\n  isWrongData: boolean;\r\n\r\n  constructor(private authService: AuthService, private router: Router) {}\r\n\r\n  ngOnInit(): void {}\r\n  onSubmit(form: NgForm) {\r\n    const email = form.value.email;\r\n    const password = form.value.password;\r\n\r\n    console.log(`Login with email: ${email} and password: ${password}`);\r\n\r\n    let authObs: Observable<UserLogin>;\r\n\r\n    authObs = this.authService.onLogin(email, password);\r\n\r\n    authObs.subscribe(\r\n      (resData) => {\r\n        this.isWrongData = false;\r\n        console.log(resData);\r\n        this.router.navigate(['edit']);\r\n        !!this.isWrongData;\r\n      },\r\n      (errorMessage) => {\r\n        this.isWrongData = true;\r\n        console.log(errorMessage);\r\n      }\r\n    );\r\n  }\r\n}\r\n","<div class=\"login-container\">\r\n  <div class=\"form-container\">\r\n    <form #loginForm=\"ngForm\" (ngSubmit)=\"onSubmit(loginForm)\">\r\n      <p class=\"wrong-auth-text\" *ngIf=\"isWrongData === true\">\r\n        Podałeś zły login lub hasło\r\n      </p>\r\n      <input\r\n        type=\"email\"\r\n        id=\"email\"\r\n        name=\"email\"\r\n        ngModel\r\n        class=\"email-input\"\r\n      /><br />\r\n      <label for=\"email\" class=\"email-label\">E-mail</label><br />\r\n      <input\r\n        type=\"password\"\r\n        id=\"password\"\r\n        name=\"password\"\r\n        ngModel\r\n        class=\"password-input\"\r\n      />\r\n      <i class=\"fas fa-eye-slash\"></i><br />\r\n      <label for=\"password\" class=\"password-label\">Hasło</label><br />\r\n      <button type=\"submit\" class=\"login-button\">Zaloguj się</button>\r\n    </form>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'add-user-popup',\n  templateUrl: './add-user-popup.component.html',\n  styleUrls: ['./add-user-popup.component.scss']\n})\nexport class AddUserPopupComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n  toggle(className) {\n    document.querySelector(className).classList.toggle('hide');\n  }\n}\n","<div class=\"popupBg hide\" (click)=\"toggle('.popupBg')\">\n      <ng-content></ng-content>\n</div>\n","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { UserService } from '../../services/userService/user.service';\r\nimport { User } from '../../models/user.model';\r\nimport { NgForm } from '@angular/forms';\r\nimport { AddUserPopupComponent } from './add-user-popup/add-user-popup.component';\r\nimport { Router } from '@angular/router';\r\nimport { AuthService } from 'src/app/services/authService/auth.service';\r\n\r\n@Component({\r\n  selector: 'app-users-edit',\r\n  templateUrl: './users-edit.component.html',\r\n  styleUrls: ['./users-edit.component.scss'],\r\n})\r\nexport class UsersEditComponent implements OnInit {\r\n  users: User[];\r\n\r\n  @ViewChild(AddUserPopupComponent) userPopup: AddUserPopupComponent;\r\n\r\n  constructor(\r\n    private userService: UserService,\r\n    private authService: AuthService\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.reloadTable();\r\n  }\r\n\r\n  reloadTable() {\r\n    setTimeout(() => {\r\n      this.userService.fetchUsers().subscribe((user) => {\r\n        this.users = user;\r\n      });\r\n    }, 200);\r\n  }\r\n\r\n  toggle(className) {\r\n    this.userPopup.toggle(className);\r\n  }\r\n\r\n  onAdd(form: NgForm) {\r\n    const user = new User({\r\n      firstname: form.value.firstname,\r\n      lastname: form.value.lastname,\r\n      adress: form.value.adress,\r\n      phone: form.value.phone,\r\n      id: '0',\r\n    });\r\n    // this.userService.addUser(user).subscribe(users => {\r\n    //   this.reloadTable();\r\n    // })\r\n    // form.reset();\r\n    // this.userService.addUser(user).subscribe((users) => {\r\n    //   this.users = users;\r\n    // });\r\n\r\n    this.userService.addUser(user);\r\n    this.reloadTable();\r\n  }\r\n\r\n  onDelete(userID: number) {\r\n    this.userService.deleteUser();\r\n  }\r\n\r\n  onClear(form: NgForm) {\r\n    form.reset();\r\n  }\r\n\r\n  onLogout() {\r\n    this.authService.onLogout();\r\n  }\r\n}\r\n","<button type=\"button\" class=\"logout-button\" (click)=\"onLogout()\">\r\n  Wyloguj się\r\n</button>\r\n<div class=\"table-container\">\r\n  <div>\r\n    <button (click)=\"toggle('.popupBg')\" class=\"add_user-button\">\r\n      Dodaj użytkownika\r\n    </button>\r\n    <div class=\"table\">\r\n      <div class=\"tableBody\">\r\n        <div class=\"tableHead\">Użytkownicy</div>\r\n        <div class=\"tableRow--odd\">\r\n          <div class=\"tableCell--head\">Imię</div>\r\n          <div class=\"tableCell--head\">Nazwisko</div>\r\n          <div class=\"tableCell--head\">Adres</div>\r\n          <div class=\"tableCell--head\">Telefon</div>\r\n          <div class=\"tableCell--head\"></div>\r\n        </div>\r\n        <div\r\n          [ngClass]=\"this.i % 2 == 0 ? 'tableRow--even' : 'tableRow--odd'\"\r\n          *ngFor=\"let user of users; let i = index\"\r\n        >\r\n          <div class=\"tableCell\">{{ users[i].firstname }}</div>\r\n          <div class=\"tableCell\">{{ users[i].lastname }}</div>\r\n          <div class=\"tableCell\">{{ users[i].adress }}</div>\r\n          <div class=\"tableCell\">{{ users[i].phone }}</div>\r\n          <div class=\"tableCell\">\r\n            <button (click)=\"onDelete(i)\" class=\"delete-button\">X</button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <add-user-popup>\r\n      <div class=\"add_user-container\" onclick=\"event.stopPropagation()\">\r\n        <form #userEditForm=\"ngForm\" (ngSubmit)=\"onAdd(userEditForm)\">\r\n          <label for=\"firstname\" class=\"add_user-label\">Imię</label><br />\r\n          <input\r\n            type=\"text\"\r\n            name=\"firstname\"\r\n            id=\"firstname\"\r\n            ngModel\r\n            class=\"add_user-input\"\r\n          /><br />\r\n          <label for=\"lastname\" class=\"add_user-label\">Nazwisko</label><br />\r\n          <input\r\n            type=\"text\"\r\n            name=\"lastname\"\r\n            id=\"lastname\"\r\n            ngModel\r\n            class=\"add_user-input\"\r\n          /><br />\r\n          <label for=\"adress\" class=\"add_user-label\">Adres</label><br />\r\n          <input\r\n            type=\"text\"\r\n            name=\"adress\"\r\n            id=\"adress\"\r\n            ngModel\r\n            class=\"add_user-input\"\r\n          /><br />\r\n          <label for=\"phone\" class=\"add_user-label\">Numer telefonu</label><br />\r\n          <input\r\n            type=\"text\"\r\n            name=\"phone\"\r\n            id=\"phone\"\r\n            ngModel\r\n            class=\"add_user-input\"\r\n          /><br />\r\n          <button\r\n            type=\"submit\"\r\n            class=\"add_user-button--add\"\r\n            (click)=\"toggle('.popupBg')\"\r\n          >\r\n            Dodaj\r\n          </button>\r\n          <button\r\n            type=\"button\"\r\n            class=\"add_user-button--clear\"\r\n            (click)=\"onClear(userEditForm)\"\r\n          >\r\n            Wyczyść\r\n          </button>\r\n          <button\r\n            type=\"button\"\r\n            class=\"add_user-button--close\"\r\n            (click)=\"toggle('.popupBg')\"\r\n          >\r\n            Anuluj\r\n          </button>\r\n        </form>\r\n      </div>\r\n    </add-user-popup>\r\n  </div>\r\n</div>\r\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { UserLogin } from 'src/app/models/user-login.model';\nimport { environment } from 'src/environments/environment';\nimport { Router } from '@angular/router';\n\nimport firebase from '@firebase/app';\nimport '@firebase/auth';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AuthService {\n  constructor(private http: HttpClient, private router: Router) {}\n\n  onLogin(email: string, password: string) {\n    return this.http.post<UserLogin>(\n      'https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=' +\n        environment.firebase.apiKey,\n      {\n        email: email,\n        password: password,\n        returnSecureToken: true,\n      }\n    );\n  }\n\n  async onLogout() {\n    try {\n      await firebase.auth().signOut();\n      this.router.navigate(['./']);\n    } catch (e) {\n      console.log(e);\n    }\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { AuthService } from '../auth.service';\nimport { Router, CanActivate } from '@angular/router';\nimport { LoginComponent } from 'src/app/pages/login/login.component';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AuthGuardService implements CanActivate {\n  constructor(private router: Router, private loginComponent: LoginComponent) {}\n\n  canActivate(): boolean {\n    console.log(this.loginComponent.isWrongData);\n    if (!this.loginComponent.isWrongData) {\n      console.log('true');\n      return true;\n    }\n    console.log('false');\n    return false;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { of } from 'rxjs';\nimport { User } from 'src/app/models/user.model';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class UserService {\n  // get allUsers(): User[] {\n  //   if (localStorage.getItem('users') === null) {\n  //     return [];\n  //   } else if (localStorage.length > 0) {\n  //     let usersArr = JSON.parse(localStorage.getItem('users'));\n  //     let mapUser = usersArr.map((user) => new User(user));\n  //     return mapUser;\n  //   }\n  // }\n\n  // set allUsers(users: User[]) {\n  //   localStorage.setItem('users', JSON.stringify(users));\n  // }\n\n  constructor(private http: HttpClient) {}\n\n  fetchUsers() {\n    // let usersArr = this.allUsers;\n\n    // return of(usersArr);\n    let usersAr: User[] = [];\n    this.http\n      .get('https://fir-login-1416c.firebaseio.com/users.json')\n      .subscribe((users) => {\n        let usersArr = Object.keys(users).map(function (id) {\n          let user = users[id];\n          return user;\n        });\n        let arrMap = usersArr.map((user) => new User(user));\n        for (let i = 0; i < arrMap.length; i++) {\n          usersAr.push(arrMap[i]);\n        }\n      });\n\n    console.log(usersAr);\n    return of(usersAr);\n  }\n\n  addUser(user: User) {\n    let postData: User = user;\n\n    this.http\n      .post<{ name: string }>(\n        'https://fir-login-1416c.firebaseio.com/users.json',\n        postData,\n        {\n          observe: 'response',\n        }\n      )\n      .subscribe(\n        (responseData) => {\n          console.log(responseData.body.name);\n        },\n        (error) => {\n          console.log(error);\n        }\n      );\n    this.fetchUsers();\n  }\n\n  deleteUser() {\n    this.http\n      .delete('https://fir-login-1416c.firebaseio.com/users.json', {\n        observe: 'response',\n      })\n      .subscribe(\n        (responseData) => {\n          console.log(responseData.body);\n        },\n        (error) => {\n          console.log(error);\n        }\n      );\n    this.fetchUsers();\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  firebase: {\n    apiKey: 'AIzaSyA7pMaqfDaMKogW45qOCNFWxl_OsU0tByY',\n    authDomain: 'fir-login-1416c.firebaseapp.com',\n    databaseURL: 'https://fir-login-1416c.firebaseio.com',\n    projectId: 'fir-login-1416c',\n    storageBucket: 'fir-login-1416c.appspot.com',\n    messagingSenderId: '29457885746',\n    appId: '1:29457885746:web:c3e7c3bd2cee9aad74ea2b',\n  },\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}