{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/models/user.model.ts","webpack:///src/app/pages/login/login.component.ts","webpack:///src/app/pages/login/login.component.html","webpack:///src/app/pages/users-edit/users-edit.component.ts","webpack:///src/app/pages/users-edit/users-edit.component.html","webpack:///src/app/services/authService/auth.service.ts","webpack:///src/app/services/userService/user.service.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","component","AppRoutingModule","forRoot","imports","AppComponent","title","selector","templateUrl","styleUrls","AppModule","declarations","providers","bootstrap","User","user","Object","assign","LoginComponent","router","authService","form","onLogin","subscribe","console","log","navigate","onSubmit","UsersEditComponent","userService","isClosed","reloadTable","fetchUsers","users","firstname","value","lastname","adress","phone","addUser","userID","deleteUser","onClose","AuthService","providedIn","UserService","usersArr","allUsers","mapIds","map","ids","maxId","Math","max","length","push","deletedUser","splice","localStorage","getItem","JSON","parse","mapUser","setItem","stringify","environment","production","bootstrapModule","err","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { LoginComponent } from './pages/login/login.component';\r\nimport { UsersEditComponent } from './pages/users-edit/users-edit.component';\r\n\r\n\r\nconst routes: Routes = [\r\n  { path: '', component: LoginComponent },\r\n  { path: 'login', component: LoginComponent },\r\n  { path: 'edit', component: UsersEditComponent }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule {\r\n}\r\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'firebase-login';\n}\n","<router-outlet></router-outlet>\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { LoginComponent } from './pages/login/login.component';\r\nimport { UsersEditComponent } from './pages/users-edit/users-edit.component';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    LoginComponent,\r\n    UsersEditComponent,\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    FormsModule\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","export class User {\r\n  firstname: string\r\n  lastname: string\r\n  adress: string\r\n  phone: string\r\n  id: number\r\n\r\n  constructor(user: any) {\r\n    if (user) Object.assign(this, user);\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { NgForm } from '@angular/forms'\r\nimport { Router } from '@angular/router';\r\nimport { AuthService } from '../../services/authService/auth.service'\r\nimport { User } from 'src/app/models/user.model';\r\n\r\n@Component({\r\n  selector: 'login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.scss']\r\n})\r\nexport class LoginComponent implements OnInit {\r\n  user: User[];\r\n\r\n  constructor(private router: Router, private authService: AuthService) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  onSubmit(form: NgForm) {\r\n    this.authService.onLogin().subscribe(user => {\r\n      this.user = user;\r\n      console.log(user);\r\n    })\r\n    this.router.navigate(['/edit']);\r\n  }\r\n}\r\n","<div class=\"login-container\">\r\n  <div class=\"form-container\">\r\n    <form #loginForm=\"ngForm\" (ngSubmit)=\"onSubmit(loginForm)\">\r\n      <input type=\"email\" id=\"email\" name=\"email\" ngModel class=\"email-input\"><br>\r\n      <label for=\"email\" class=\"email-label\">E-mail</label><br>\r\n      <i class=\"fas fa-eye-slash\"></i>\r\n      <input type=\"password\" id=\"password\" name=\"password\" ngModel class=\"password-input\"><br>\r\n      <label for=\"password\" class=\"password-label\">Hasło</label><br>\r\n      <button type=\"submit\" class=\"login-button\">Zaloguj się</button>\r\n    </form>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { UserService } from '../../services/userService/user.service';\r\nimport { User } from '../../models/user.model';\r\nimport { NgForm } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'app-users-edit',\r\n  templateUrl: './users-edit.component.html',\r\n  styleUrls: ['./users-edit.component.scss']\r\n})\r\nexport class UsersEditComponent implements OnInit {\r\n  users: User[];\r\n  isClosed = true;\r\n\r\n  constructor(private userService: UserService) { }\r\n\r\n\r\n  ngOnInit(): void {\r\n    this.reloadTable();\r\n  }\r\n\r\n  reloadTable() {\r\n    this.userService.fetchUsers().subscribe(users => {\r\n      this.users = users;\r\n    })\r\n  }\r\n\r\n  onAdd(form: NgForm) {\r\n    this.isClosed = !this.isClosed;\r\n    const user = new User({firstname: form.value.firstname, lastname: form.value.lastname, adress: form.value.adress, phone: form.value.phone, id: '4'})\r\n    this.userService.addUser(user).subscribe(users => {\r\n      this.reloadTable();\r\n    })\r\n  }\r\n\r\n  onDelete(userID: number) {\r\n    this.userService.deleteUser(userID).subscribe(users => {\r\n      this.reloadTable();\r\n    })\r\n  }\r\n\r\n  onClose() {\r\n    this.isClosed = !this.isClosed;\r\n  }\r\n\r\n}\r\n","<div class=\"table-container\">\r\n  <div>\r\n    <button (click)=\"onClose()\" class=\"add_user-button\">Dodaj użytkownika</button>\r\n    <div class=\"table\">\r\n      <div class=\"tableBody\">\r\n        <div class=\"tableHead\">Użytkownicy</div>\r\n        <div class=\"tableRow--odd\">\r\n          <div class=\"tableCell--head\">Imię</div>\r\n          <div class=\"tableCell--head\">Nazwisko</div>\r\n          <div class=\"tableCell--head\">Adres</div>\r\n          <div class=\"tableCell--head\">Telefon</div>\r\n          <div class=\"tableCell--head\"></div>\r\n        </div>\r\n        <div [ngClass]=\"this.i % 2 == 0 ? 'tableRow--even' : 'tableRow--odd'\" *ngFor=\"let user of users; let i = index\">\r\n            <div class=\"tableCell\">{{ users[i].firstname }}</div>\r\n            <div class=\"tableCell\">{{ users[i].lastname }}</div>\r\n            <div class=\"tableCell\">{{ users[i].adress }}</div>\r\n            <div class=\"tableCell\">{{ users[i].phone }}</div>\r\n            <div class=\"tableCell\"><button (click)=\"onDelete(i)\" class=\"delete-button\">X</button></div>\r\n        </div>\r\n      </div>\r\n  </div>\r\n  <div *ngIf=\"isClosed === false\" class=\"add_user-container\">\r\n    <form #userEditForm=\"ngForm\" (ngSubmit)=\"onAdd(userEditForm)\">\r\n      <label for=\"firstname\" class=\"add_user-label\">Imię</label><br>\r\n      <input type=\"text\" name=\"firstname\" id=\"firstname\" ngModel class=\"add_user-input\"><br>\r\n      <label for=\"lastname\" class=\"add_user-label\">Nazwisko</label><br>\r\n      <input type=\"text\" name=\"lastname\" id=\"lastname\" ngModel class=\"add_user-input\"><br>\r\n      <label for=\"adress\" class=\"add_user-label\">Adres</label><br>\r\n      <input type=\"text\" name=\"adress\" id=\"adress\" ngModel class=\"add_user-input\"><br>\r\n      <label for=\"phone\" class=\"add_user-label\">Numer telefonu</label><br>\r\n      <input type=\"text\" name=\"phone\" id=\"phone\" ngModel class=\"add_user-input\"><br>\r\n      <button type=\"submit\" class=\"add_user-button--add\">Dodaj</button>\r\n      <button type=\"button\" (click)=\"onClose()\" class=\"add_user-button--close\">Anuluj</button>\r\n    </form>\r\n  </div>\r\n</div>\r\n","import { Injectable } from '@angular/core';\nimport { of } from 'rxjs';\nimport { User } from 'src/app/models/user.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n\n  constructor() { }\n\n  onLogin() {\n    return of([\n      new User({firstname: 'Jan', lastname: 'Kowalski', adress: 'Łódź, rzeczna 15', phone: '+48654435675'})\n    ])\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { of } from 'rxjs';\nimport { map, max } from 'rxjs/operators'\nimport { User } from 'src/app/models/user.model';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class UserService {\n  get allUsers(): User[] {\n    if (localStorage.getItem('users') === null) {\n      return [];\n    } else if (localStorage.length > 0) {\n      let usersArr = JSON.parse(localStorage.getItem('users'));\n      let mapUser = usersArr.map(user => new User(user));\n      return mapUser;\n    }\n  }\n\n  set allUsers(users: User[]) {\n    localStorage.setItem('users', JSON.stringify(users));\n  }\n\n  constructor() {}\n\n  fetchUsers() {\n    let usersArr = this.allUsers;\n\n    return of(usersArr);\n  }\n\n  addUser(user: User) {\n\n    let usersArr = this.allUsers;\n\n    let mapIds = usersArr.map(ids => ids.id);\n\n    let maxId = Math.max(...mapIds);\n\n    if (usersArr.length == 0) {\n      user.id = 0;\n    } else {\n      user.id = maxId + 1;\n    }\n\n    usersArr.push(user);\n\n    this.allUsers = usersArr;\n\n    return of(user);\n  }\n\n  deleteUser(id) {\n\n    let deletedUser = this.allUsers;\n\n    deletedUser.splice(id, 1);\n\n    this.allUsers = deletedUser;\n\n    return of(deletedUser);\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}