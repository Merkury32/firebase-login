{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/models/user.model.ts","webpack:///src/app/pages/login/login.component.ts","webpack:///src/app/pages/login/login.component.html","webpack:///src/app/pages/users-edit/add-user-popup/add-user-popup.component.ts","webpack:///src/app/pages/users-edit/add-user-popup/add-user-popup.component.html","webpack:///src/app/pages/users-edit/users-edit.component.ts","webpack:///src/app/pages/users-edit/users-edit.component.html","webpack:///src/app/services/authService/auth.service.ts","webpack:///src/app/services/userService/user.service.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","component","AppRoutingModule","forRoot","useHash","imports","AppComponent","title","selector","templateUrl","styleUrls","AppModule","declarations","providers","bootstrap","User","user","Object","assign","LoginComponent","router","authService","isWrongData","form","email","value","password","console","log","authObs","onLogin","subscribe","resData","navigate","errorMessage","onSubmit","AddUserPopupComponent","className","document","querySelector","classList","toggle","UsersEditComponent","userService","reloadTable","fetchUsers","users","userPopup","firstname","lastname","adress","phone","addUser","userID","deleteUser","reset","onLogout","onAdd","onClear","AuthService","http","post","firebaseApiKey","returnSecureToken","providedIn","UserService","usersAr","get","arr","map","key","type","arrMap","i","length","push","postData","observe","responseData","body","error","deletedUser","allUsers","splice","localStorage","getItem","usersArr","JSON","parse","mapUser","setItem","stringify","environment","production","bootstrapModule","err"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { LoginComponent } from './pages/login/login.component';\r\nimport { UsersEditComponent } from './pages/users-edit/users-edit.component';\r\n\r\nconst routes: Routes = [\r\n  { path: '', component: LoginComponent },\r\n  { path: 'login', component: LoginComponent },\r\n  { path: 'edit', component: UsersEditComponent },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes, { useHash: true })],\r\n  exports: [RouterModule],\r\n})\r\nexport class AppRoutingModule {}\r\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'firebase-login';\n}\n","<router-outlet></router-outlet>\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { LoginComponent } from './pages/login/login.component';\r\nimport { UsersEditComponent } from './pages/users-edit/users-edit.component';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { AddUserPopupComponent } from './pages/users-edit/add-user-popup/add-user-popup.component';\r\nimport { HttpClientModule } from '@angular/common/http';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    LoginComponent,\r\n    UsersEditComponent,\r\n    AddUserPopupComponent,\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    FormsModule,\r\n    HttpClientModule\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","export class User {\r\n  firstname: string\r\n  lastname: string\r\n  adress: string\r\n  phone: string\r\n  id: number\r\n\r\n  constructor(user: any) {\r\n    if (user) Object.assign(this, user);\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { NgForm } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { AuthService } from '../../services/authService/auth.service';\r\nimport { User } from 'src/app/models/user.model';\r\nimport { Observable } from 'rxjs';\r\nimport { UserLogin } from 'src/app/models/user-login.model';\r\n\r\n@Component({\r\n  selector: 'login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.scss'],\r\n})\r\nexport class LoginComponent implements OnInit {\r\n  user: User[];\r\n  isWrongData = false;\r\n\r\n  constructor(private router: Router, private authService: AuthService) {}\r\n\r\n  ngOnInit(): void {}\r\n  onSubmit(form: NgForm) {\r\n    const email = form.value.email;\r\n    const password = form.value.password;\r\n\r\n    console.log(`Login with email: ${email} and password: ${password}`);\r\n\r\n    let authObs: Observable<UserLogin>;\r\n\r\n    authObs = this.authService.onLogin(email, password);\r\n\r\n    authObs.subscribe(\r\n      (resData) => {\r\n        console.log(resData);\r\n        this.isWrongData = false;\r\n        this.router.navigate(['/edit']);\r\n      },\r\n      (errorMessage) => {\r\n        this.isWrongData = true;\r\n        console.log(errorMessage);\r\n      }\r\n    );\r\n  }\r\n}\r\n","<div class=\"login-container\">\r\n  <div class=\"form-container\">\r\n    <form #loginForm=\"ngForm\" (ngSubmit)=\"onSubmit(loginForm)\">\r\n      <p class=\"wrong-auth-text\" *ngIf=\"isWrongData === true\">\r\n        Podałeś zły login lub hasło\r\n      </p>\r\n      <input\r\n        type=\"email\"\r\n        id=\"email\"\r\n        name=\"email\"\r\n        ngModel\r\n        class=\"email-input\"\r\n      /><br />\r\n      <label for=\"email\" class=\"email-label\">E-mail</label><br />\r\n      <input\r\n        type=\"password\"\r\n        id=\"password\"\r\n        name=\"password\"\r\n        ngModel\r\n        class=\"password-input\"\r\n      />\r\n      <i class=\"fas fa-eye-slash\"></i><br />\r\n      <label for=\"password\" class=\"password-label\">Hasło</label><br />\r\n      <button type=\"submit\" class=\"login-button\">Zaloguj się</button>\r\n    </form>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'add-user-popup',\n  templateUrl: './add-user-popup.component.html',\n  styleUrls: ['./add-user-popup.component.scss']\n})\nexport class AddUserPopupComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n  toggle(className) {\n    document.querySelector(className).classList.toggle('hide');\n  }\n}\n","<div class=\"popupBg hide\" (click)=\"toggle('.popupBg')\">\n      <ng-content></ng-content>\n</div>\n","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { UserService } from '../../services/userService/user.service';\r\nimport { User } from '../../models/user.model';\r\nimport { NgForm } from '@angular/forms';\r\nimport { AddUserPopupComponent } from './add-user-popup/add-user-popup.component';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-users-edit',\r\n  templateUrl: './users-edit.component.html',\r\n  styleUrls: ['./users-edit.component.scss'],\r\n})\r\nexport class UsersEditComponent implements OnInit {\r\n  users: User[];\r\n\r\n  @ViewChild(AddUserPopupComponent) userPopup: AddUserPopupComponent;\r\n\r\n  constructor(private userService: UserService, private router: Router) {}\r\n\r\n  ngOnInit(): void {\r\n    this.reloadTable();\r\n  }\r\n\r\n  reloadTable() {\r\n    this.userService.fetchUsers().subscribe((user) => {\r\n      this.users = user;\r\n    });\r\n  }\r\n\r\n  toggle(className) {\r\n    this.userPopup.toggle(className);\r\n  }\r\n\r\n  onAdd(form: NgForm) {\r\n    const user = new User({\r\n      firstname: form.value.firstname,\r\n      lastname: form.value.lastname,\r\n      adress: form.value.adress,\r\n      phone: form.value.phone,\r\n      id: '4',\r\n    });\r\n    // this.userService.addUser(user).subscribe(users => {\r\n    //   this.reloadTable();\r\n    // })\r\n    // form.reset();\r\n    // this.userService.addUser(user).subscribe((users) => {\r\n    //   this.users = users;\r\n    // });\r\n\r\n    this.userService.addUser(user);\r\n    this.reloadTable();\r\n  }\r\n\r\n  onDelete(userID: number) {\r\n    this.userService.deleteUser(userID).subscribe((users) => {\r\n      this.reloadTable();\r\n    });\r\n  }\r\n\r\n  onClear(form: NgForm) {\r\n    form.reset();\r\n  }\r\n\r\n  onLogout() {\r\n    this.router.navigate(['./']);\r\n  }\r\n}\r\n","<button type=\"button\" class=\"logout-button\" (click)=\"onLogout()\">\r\n  Wyloguj się\r\n</button>\r\n<div class=\"table-container\">\r\n  <div>\r\n    <button (click)=\"toggle('.popupBg')\" class=\"add_user-button\">\r\n      Dodaj użytkownika\r\n    </button>\r\n    <div class=\"table\">\r\n      <div class=\"tableBody\">\r\n        <div class=\"tableHead\">Użytkownicy</div>\r\n        <div class=\"tableRow--odd\">\r\n          <div class=\"tableCell--head\">Imię</div>\r\n          <div class=\"tableCell--head\">Nazwisko</div>\r\n          <div class=\"tableCell--head\">Adres</div>\r\n          <div class=\"tableCell--head\">Telefon</div>\r\n          <div class=\"tableCell--head\"></div>\r\n        </div>\r\n        <div\r\n          [ngClass]=\"this.i % 2 == 0 ? 'tableRow--even' : 'tableRow--odd'\"\r\n          *ngFor=\"let user of users; let i = index\"\r\n        >\r\n          <div class=\"tableCell\">{{ users[i].firstname }}</div>\r\n          <div class=\"tableCell\">{{ users[i].lastname }}</div>\r\n          <div class=\"tableCell\">{{ users[i].adress }}</div>\r\n          <div class=\"tableCell\">{{ users[i].phone }}</div>\r\n          <div class=\"tableCell\">\r\n            <button (click)=\"onDelete(i)\" class=\"delete-button\">X</button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <add-user-popup>\r\n      <div class=\"add_user-container\" onclick=\"event.stopPropagation()\">\r\n        <form #userEditForm=\"ngForm\" (ngSubmit)=\"onAdd(userEditForm)\">\r\n          <label for=\"firstname\" class=\"add_user-label\">Imię</label><br />\r\n          <input\r\n            type=\"text\"\r\n            name=\"firstname\"\r\n            id=\"firstname\"\r\n            ngModel\r\n            class=\"add_user-input\"\r\n          /><br />\r\n          <label for=\"lastname\" class=\"add_user-label\">Nazwisko</label><br />\r\n          <input\r\n            type=\"text\"\r\n            name=\"lastname\"\r\n            id=\"lastname\"\r\n            ngModel\r\n            class=\"add_user-input\"\r\n          /><br />\r\n          <label for=\"adress\" class=\"add_user-label\">Adres</label><br />\r\n          <input\r\n            type=\"text\"\r\n            name=\"adress\"\r\n            id=\"adress\"\r\n            ngModel\r\n            class=\"add_user-input\"\r\n          /><br />\r\n          <label for=\"phone\" class=\"add_user-label\">Numer telefonu</label><br />\r\n          <input\r\n            type=\"text\"\r\n            name=\"phone\"\r\n            id=\"phone\"\r\n            ngModel\r\n            class=\"add_user-input\"\r\n          /><br />\r\n          <button\r\n            type=\"submit\"\r\n            class=\"add_user-button--add\"\r\n            (click)=\"toggle('.popupBg')\"\r\n          >\r\n            Dodaj\r\n          </button>\r\n          <button\r\n            type=\"button\"\r\n            class=\"add_user-button--clear\"\r\n            (click)=\"onClear(userEditForm)\"\r\n          >\r\n            Wyczyść\r\n          </button>\r\n          <button\r\n            type=\"button\"\r\n            class=\"add_user-button--close\"\r\n            (click)=\"toggle('.popupBg')\"\r\n          >\r\n            Anuluj\r\n          </button>\r\n        </form>\r\n      </div>\r\n    </add-user-popup>\r\n  </div>\r\n</div>\r\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from \"@angular/common/http\";\nimport { UserLogin } from 'src/app/models/user-login.model';\nimport { environment } from 'src/environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n\n  constructor(private http: HttpClient) { }\n\n  onLogin(email: string, password: string) {\n    return this.http\n      .post<UserLogin>(\n        \"https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=\" + environment.firebaseApiKey,\n        {\n          email: email,\n          password: password,\n          returnSecureToken: true,\n        }\n      )\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { of } from 'rxjs';\nimport { map, max } from 'rxjs/operators';\nimport { User } from 'src/app/models/user.model';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class UserService {\n  get allUsers(): User[] {\n    if (localStorage.getItem('users') === null) {\n      return [];\n    } else if (localStorage.length > 0) {\n      let usersArr = JSON.parse(localStorage.getItem('users'));\n      let mapUser = usersArr.map((user) => new User(user));\n      return mapUser;\n    }\n  }\n\n  set allUsers(users: User[]) {\n    localStorage.setItem('users', JSON.stringify(users));\n  }\n\n  constructor(private http: HttpClient) {}\n\n  fetchUsers() {\n    // let usersArr = this.allUsers;\n\n    // return of(usersArr);\n    let usersAr: User[] = [];\n    this.http\n      .get('https://fir-login-1416c.firebaseio.com/users.json')\n      .subscribe((users) => {\n        let arr = Object.keys(users).map((key) => ({\n          type: key,\n          value: users[key],\n        }));\n        let arrMap = arr.map((user) => new User(user));\n        for (let i = 0; i < arrMap.length; i++) {\n          usersAr.push(arrMap[i]);\n        }\n      });\n    console.log(usersAr);\n    return of(usersAr);\n  }\n\n  addUser(user: User) {\n    // let usersArr = this.allUsers;\n\n    // let mapIds = usersArr.map(ids => ids.id);\n\n    // let maxId = Math.max(...mapIds);\n\n    // if (usersArr.length == 0) {\n    //   user.id = 0;\n    // } else {\n    //   user.id = maxId + 1;\n    // }\n\n    // usersArr.push(user);\n\n    // this.allUsers = usersArr;\n\n    // return of(user);\n\n    const postData: User = user;\n    this.http\n      .post<{ name: string }>(\n        'https://fir-login-1416c.firebaseio.com/users.json',\n        postData,\n        {\n          observe: 'response',\n        }\n      )\n      .subscribe(\n        (responseData) => {\n          console.log(responseData.body);\n        },\n        (error) => {\n          console.log(error);\n        }\n      );\n\n    this.fetchUsers();\n  }\n\n  deleteUser(id) {\n    let deletedUser = this.allUsers;\n\n    deletedUser.splice(id, 1);\n\n    this.allUsers = deletedUser;\n\n    return of(deletedUser);\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  firebaseApiKey: \"AIzaSyA7pMaqfDaMKogW45qOCNFWxl_OsU0tByY\"\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}